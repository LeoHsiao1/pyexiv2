# Test the pyexiv2 packages uploaded to pypi.org .

name: Test package

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      wheel_version:
        default: 2.15.3

env:
  wheel_version: ${{ inputs.wheel_version || '2.15.3' }}

jobs:
  job1:
    name: Test package on ubuntu
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        python_version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python_version }}
    - name: Install dependencies
      run: |
        python -m pip install pyexiv2==${{ env.wheel_version }}
        python -m pip install pytest psutil
    - name: Test
      run: |
        python -c "import os; os.remove('pyexiv2/__init__.py')"    # Disable pyexiv2 in the repository, to use only the installed pyexiv2
        python -c "from pyexiv2 import Image; print(Image.__doc__)"
        pytest -sv
      env:
        PYEXIV2_MODULE: pyexiv2

  job2:
    name: Test package
    strategy:
      fail-fast: false
      matrix:
        os: [macos-14, macos-15]
        python_version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python_version }}
    - name: Install dependencies
      run: |
        python -m pip install pyexiv2==${{ env.wheel_version }}
        python -m pip install pytest psutil
    - name: Test
      run: |
        brew install inih
        python -c "import os; os.remove('pyexiv2/__init__.py')"    # Disable pyexiv2 in the repository, to use only the installed pyexiv2
        python -c "from pyexiv2 import Image; print(Image.__doc__)"
        pytest -sv
      env:
        PYEXIV2_MODULE: pyexiv2

  job3:
    name: Test package
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
        python_version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python_version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python_version }}
    - name: Install dependencies
      run: |
        python -m pip install pyexiv2==${{ env.wheel_version }}
        python -m pip install pytest psutil
    - name: Test
      run: |
        python -c "import os; os.remove('pyexiv2/__init__.py')"    # Disable pyexiv2 in the repository, to use only the installed pyexiv2
        python -c "from pyexiv2 import Image; print(Image.__doc__)"
        pytest -sv
      env:
        PYEXIV2_MODULE: pyexiv2
