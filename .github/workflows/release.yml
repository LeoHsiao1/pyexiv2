# Make wheel packages for pyexiv2, and upload them.

name: Release

on:
  workflow_dispatch:
    inputs:
      last_build_id:
        description: Input the run id of workflows/build.yml, to download artifacts from it.
      upload_to_github:
        default: false
      # upload_to_pypi:
      #   default: false

jobs:
  release:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        run-id: ${{ inputs.last_build_id }}
        path: artifacts/
        # A token with actions:read permissions to download artifacts from another workflow run.
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: List artifacts
      run: |
        tree -sh artifacts/

    - name: Set up Python3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install setuptools wheel twine

    - name: Make wheels
      run: |
        for artifact_name in `ls artifacts/`
        do
            cd ${{ github.workspace }}
            git reset --hard
            git clean -dfx build pyexiv2 pyexiv2.egg-info
            rm -rf pyexiv2/tests/

            echo "- Processing ${artifact_name}"
            mv artifacts/${artifact_name}/* pyexiv2/lib/

            fields=(${artifact_name//-/ })
            py_version=`echo ${fields[0]} | sed 's#\.##g' | sed 's#py##g'`
            exiv2_platform_name=${fields[1]}-${fields[2]}

            # ${exiv2_platform_name} depends on the runner.os in https://github.com/Exiv2/exiv2/blob/main/.github/workflows/release.yml
            # ${plat_name} depends on the platform tag in https://packaging.python.org/en/latest/specifications/platform-compatibility-tags
            if   [ ${exiv2_platform_name} == Linux-x86_64 ]
            then
                plat_name=manylinux2014_x86_64
            elif [ ${exiv2_platform_name} == Linux-aarch64 ]
            then
                plat_name=manylinux2014_aarch64
            elif [ ${exiv2_platform_name} == Darwin-x86_64 ]
            then
                plat_name=macosx_13_0_x86_64
            elif [ ${exiv2_platform_name} == Darwin-arm64 ]
            then
                plat_name=macosx_14_0_arm64
            elif [ ${exiv2_platform_name} == 2022msvc-AMD64 ]
            then
                plat_name=win_amd64
            else
                echo "Unknown platform: ${item}"
                exit 1
            fi

            echo "  - python setup.py bdist_wheel --python-tag cp${py_version} --plat-name ${plat_name}"
            python setup.py bdist_wheel --python-tag cp${py_version} --plat-name ${plat_name}
        done

    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels
        path: |
          dist/*
        if-no-files-found: error
        retention-days: 3

    - name: Upload wheels to GitHub
      uses: softprops/action-gh-release@v2
      if: inputs.upload_to_github == 'true'
      with:
        name: A draft for release
        draft: true
        body: This release is automatically generated by workflows/release.yml.
        files: |
          dist/*

    # - name: Upload wheels to PyPI
    #   if: inputs.upload_to_pypi == 'true'
    #   run: |
    #     python -m twine upload -u __token__ dist/*
    #     # Maybe the token should not be used, according to https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/#configuring-trusted-publishing
